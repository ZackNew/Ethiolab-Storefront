{"code":"import { __awaiter, __generator } from \"tslib\";\r\nimport { usePaymentFactory } from '../../factories';\r\nvar usePaymentFactoryParams = {\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    set: function (context, _a) {\r\n        var method = _a.method, metadata = _a.metadata, customQuery = _a.customQuery;\r\n        return __awaiter(void 0, void 0, void 0, function () {\r\n            var response;\r\n            var _b;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0: return [4 /*yield*/, context.$vendure.api.setPaymentMethod({ method: method, metadata: metadata }, customQuery)];\r\n                    case 1:\r\n                        response = _c.sent();\r\n                        return [2 /*return*/, (_b = response === null || response === void 0 ? void 0 : response.data) === null || _b === void 0 ? void 0 : _b.addPaymentToOrder];\r\n                }\r\n            });\r\n        });\r\n    },\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    load: function (context, params) { return __awaiter(void 0, void 0, void 0, function () {\r\n        var response;\r\n        var _a;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, context.$vendure.api.getPaymentMethods(params === null || params === void 0 ? void 0 : params.customQuery)];\r\n                case 1:\r\n                    response = _b.sent();\r\n                    return [2 /*return*/, (_a = response === null || response === void 0 ? void 0 : response.data) === null || _a === void 0 ? void 0 : _a.eligiblePaymentMethods];\r\n            }\r\n        });\r\n    }); }\r\n};\r\nvar usePayment = usePaymentFactory(usePaymentFactoryParams);\r\nexport { usePayment, usePaymentFactoryParams };\r\n//# sourceMappingURL=index.js.map","references":["/home/eb/projs/eecommerce.web/ecommerce.web/node_modules/@vue-storefront/core/lib/src/index.d.ts","/home/eb/projs/eecommerce.web/ecommerce.web/node_modules/@vue-storefront/vendure-api/lib/index.d.ts","/home/eb/projs/eecommerce.web/ecommerce.web/packages/composables/src/factories/index.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/composables/usePayment/index.ts\"],\"names\":[],\"mappings\":\";AAEA,OAAO,EAAc,iBAAiB,EAA2B,MAAM,iBAAiB,CAAC;AAEzF,IAAM,uBAAuB,GAAkD;IAC7E,6DAA6D;IAC7D,GAAG,EAAE,UAAO,OAAgB,EAAE,EAAiC;YAA/B,MAAM,YAAA,EAAE,QAAQ,cAAA,EAAE,WAAW,iBAAA;;;;;;4BAC1C,qBAAM,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAAE,MAAM,QAAA,EAAE,QAAQ,UAAA,EAAE,EAAE,WAAW,CAAC,EAAA;;wBAAzF,QAAQ,GAAG,SAA8E;wBAE/F,sBAAO,MAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,0CAAE,iBAAiB,EAAC;;;;KAC1C;IACD,6DAA6D;IAC7D,IAAI,EAAE,UAAO,OAAgB,EAAE,MAAqC;;;;;wBACjD,qBAAM,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,WAAW,CAAC,EAAA;;oBAA5E,QAAQ,GAAG,SAAiE;oBAElF,sBAAO,MAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,0CAAE,sBAAsB,EAAC;;;SAC/C;CACF,CAAC;AAEF,IAAM,UAAU,GAA2C,iBAAiB,CAAuB,uBAAuB,CAAC,CAAC;AAE5H,OAAO,EACL,UAAU,EACV,uBAAuB,EACxB,CAAC\"}","dtsmap":{"name":"/home/eb/projs/eecommerce.web/ecommerce.web/packages/composables/lib/composables/usePayment/index.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"index.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/composables/usePayment/index.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EAAE,kBAAkB,EAAE,MAAM,6BAA6B,CAAC;AACjE,OAAO,EAAE,UAAU,EAAqB,uBAAuB,EAAE,MAAM,iBAAiB,CAAC;AAEzF,QAAA,MAAM,uBAAuB,EAAE,uBAAuB,CAAC,kBAAkB,EAAE,CAa1E,CAAC;AAEF,QAAA,MAAM,UAAU,EAAE,MAAM,UAAU,CAAC,kBAAkB,EAAE,CAAoE,CAAC;AAE5H,OAAO,EACL,UAAU,EACV,uBAAuB,EACxB,CAAC\"}"},"dts":{"name":"/home/eb/projs/eecommerce.web/ecommerce.web/packages/composables/lib/composables/usePayment/index.d.ts","writeByteOrderMark":false,"text":"import { PaymentMethodQuote } from '@vue-storefront/vendure-api';\r\nimport { UsePayment, UsePaymentFactoryParams } from '../../factories';\r\ndeclare const usePaymentFactoryParams: UsePaymentFactoryParams<PaymentMethodQuote[]>;\r\ndeclare const usePayment: () => UsePayment<PaymentMethodQuote[]>;\r\nexport { usePayment, usePaymentFactoryParams };\r\n//# sourceMappingURL=index.d.ts.map"}}
